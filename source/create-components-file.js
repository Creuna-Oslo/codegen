/* eslint-disable no-console */
const assert = require('assert');
const chalk = require('chalk');
const klawSync = require('klaw-sync');
const path = require('path');

const getComponentMetadata = require('./get-component-metadata');
const handleKlawError = require('./handle-klaw-error');
const importStatement = require('./import-statement');
const writeFile = require('./write-file');

module.exports = ({
  componentsPath,
  fileHeader = '// NOTE: Do not edit this file. It is automatically generated.',
  fileName,
  outputPath,
  prettierOptions
}) => {
  assert(componentsPath, 'Options.componentsPath is required.');
  assert(outputPath, 'Options.outputPath is required.');
  assert(fileName, 'Options.fileName is required.');

  console.log(`⚙️  Generating ${chalk.blueBright(fileName)}`);

  try {
    const components = klawSync(componentsPath, {
      filter: item => path.basename(item.path)[0] !== '.'
    }).reduce((accumulator, { path: filePath }) => {
      const { componentName, folderPath } = getComponentMetadata(filePath);

      return !componentName
        ? accumulator
        : { ...accumulator, [componentName]: folderPath };
    }, {});

    const importStatements = Object.entries(components).reduce(
      (accumulator, [componentName, folderPath]) =>
        accumulator + importStatement(componentName, outputPath, folderPath),
      ''
    );

    const exportProperties = Object.keys(components).join(',\n  ');
    const exportStatement = `export {\n  ${exportProperties}\n}`;

    const fileContent = `${fileHeader}\n\n${importStatements}\n${exportStatement}\n`;

    writeFile(path.join(outputPath, fileName), fileContent, prettierOptions);
  } catch (error) {
    handleKlawError(error, componentsPath);
  }
};

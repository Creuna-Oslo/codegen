const assert = require('assert');
const klawSync = require('klaw-sync');
const path = require('path');

const getComponentMetadata = require('./get-component-metadata');
const handleKlawError = require('./handle-klaw-error');
const writeFile = require('./write-file');

module.exports = ({
  fileHeader = '// NOTE: Do not edit this file. It is automatically generated.',
  fileName,
  outputPath,
  pagesPath,
  prettierOptions
}) => {
  assert(fileName, 'Options.fileName is required');
  assert(outputPath, 'Options.outputPath is required');
  assert(pagesPath, 'Options.pagesPath is required');

  try {
    const pages = klawSync(pagesPath, {
      filter: item => path.basename(item.path)[0] !== '.'
    }).reduce((accumulator, { path: filePath }) => {
      const metadata = getComponentMetadata(filePath);

      return Object.keys(metadata).length > 0
        ? accumulator.concat(metadata)
        : accumulator;
    }, []);

    const exportContent = pages.map(page => `'${page.path}'`);

    const exportStatement = `module.exports = [\n${exportContent.join(',\n')}];`;
    const pagesFileContent = `${fileHeader}\n\n${exportStatement}\n`;

    writeFile(path.join(outputPath, fileName), pagesFileContent, prettierOptions);
  } catch (error) {
    handleKlawError(error, pagesPath);
  }
};
